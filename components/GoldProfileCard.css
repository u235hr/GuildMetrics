/* ========== 视觉层级系统说明 ========== */
/* 
 * 卡片分为7个视觉层（从底层到顶层）：
 * 1. 背景光晕层 - pc-card-wrapper::before (最底层)
 * 2. 卡片主体层 - pc-card (基础层) 
 * 3. 内部背景层 - pc-inside (z-index: 0.01px)
 * 4. 彩虹光效层 - pc-shine (z-index: 1px)
 * 5. 表面光照层 - pc-glare (z-index: 1.1px)
 * 6. 头像内容层 - pc-avatar-content (z-index: 2)
 * 7. 文字内容层 - pc-content (z-index: 5)
 */

:root {
  /* ========== 第1层：背景光晕层控制变量 ========== */
  --behind-gradient: none; /* 第1层，控制背景光晕颜色，作用视觉范围：卡片边框外围10px区域，单独起效 */
  
  /* ========== 第2层：卡片主体层控制变量 ========== */
  --card-opacity: 0; /* 第2层，控制卡片整体透明度，作用视觉范围：整个卡片区域，单独起效 */
  --pointer-x: 50%; /* 第2层，鼠标X位置，作用视觉范围：整个卡片区域，与--pointer-y合作起效 */
  --pointer-y: 50%; /* 第2层，鼠标Y位置，作用视觉范围：整个卡片区域，与--pointer-x合作起效 */
  --pointer-from-center: 0; /* 第2层，鼠标距离中心，作用视觉范围：整个卡片区域，光效强度的直观视觉核心 */
  --pointer-from-top: 0.5; /* 第2层，鼠标Y相对位置，作用视觉范围：整个卡片区域，阴影偏移的直观视觉核心 */
  --pointer-from-left: 0.5; /* 第2层，鼠标X相对位置，作用视觉范围：整个卡片区域，阴影偏移的直观视觉核心 */
  --rotate-x: 0deg; /* 第2层，X轴旋转角度，作用视觉范围：整个卡片区域，3D变换的直观视觉核心 */
  --rotate-y: 0deg; /* 第2层，Y轴旋转角度，作用视觉范围：整个卡片区域，3D变换的直观视觉核心 */
  
  /* ========== 第3层：内部背景层控制变量 ========== */
  --inner-gradient: none; /* 第3层，控制内部背景渐变，作用视觉范围：卡片边框以内1px区域，与第5层配合起效 */
  
  /* ========== 第4层：彩虹光效层控制变量 ========== */
  --background-x: 50%; /* 第4层，彩虹光效X位置，作用视觉范围：整个卡片表面，与--background-y合作起效 */
  --background-y: 50%; /* 第4层，彩虹光效Y位置，作用视觉范围：整个卡片表面，与--background-x合作起效 */
  --icon: none; /* 第4层，彩虹光效遮罩形状，作用视觉范围：整个卡片表面，遮罩效果的直观视觉核心 */
  --grain: url(/grain.webp); /* 第4层，噪点纹理，作用视觉范围：整个卡片表面，金属质感的直观视觉核心 */
  
  /* ========== 第4-7层：彩虹色谱变量 ========== */
  --sunpillar-1: hsl(2, 100%, 73%);   /* 第4-7层，红色，作用视觉范围：彩虹条纹+金属光泽+名字文字，彩虹效果的直观视觉核心 */
  --sunpillar-2: hsl(53, 100%, 69%);  /* 第4-7层，黄色，作用视觉范围：彩虹条纹+金属光泽+数值文字，彩虹效果的直观视觉核心 */
  --sunpillar-3: hsl(93, 100%, 69%);  /* 第4-7层，绿色，作用视觉范围：彩虹条纹+金属光泽+名字文字，彩虹效果的直观视觉核心 */
  --sunpillar-4: hsl(176, 100%, 76%); /* 第4-7层，青色，作用视觉范围：彩虹条纹+金属光泽+数值文字，彩虹效果的直观视觉核心 */
  --sunpillar-5: hsl(228, 100%, 74%); /* 第4-7层，蓝色，作用视觉范围：彩虹条纹+金属光泽+名字文字，彩虹效果的直观视觉核心 */
  --sunpillar-6: hsl(283, 100%, 73%); /* 第4-7层，紫色，作用视觉范围：彩虹条纹+金属光泽+数值文字，彩虹效果的直观视觉核心 */
  
  /* 彩虹颜色别名，用于重复渐变 */
  --sunpillar-clr-1: var(--sunpillar-1);
  --sunpillar-clr-2: var(--sunpillar-2);
  --sunpillar-clr-3: var(--sunpillar-3);
  --sunpillar-clr-4: var(--sunpillar-4);
  --sunpillar-clr-5: var(--sunpillar-5);
  --sunpillar-clr-6: var(--sunpillar-6);
  
  --card-radius: 30px; /* 全局，卡片圆角半径，作用视觉范围：所有层级的圆角效果，单独起效 */
}

/* ========== 背景光晕层 ========== */
/* 此类所有属性全负责：背景光晕层 */
/* 直观视觉效果：3D透视容器 */
.pc-card-wrapper {
  perspective: 500px; /* 3D透视效果，立体感的直观视觉核心，数值越大，透视效果越强 */
  transform: translate3d(0, 0, 0.1px); /* 启用硬件加速，性能优化 */
  position: relative; /* 相对定位 */
  touch-action: none; /* 禁用触摸滚动，避免干扰3D效果 */
}

/* 直观视觉效果：卡片背后的光晕效果 */
.pc-card-wrapper::before {
  content: '';
  position: absolute;
  inset: -10px; /* 比卡片大10px，光晕范围的直观视觉核心 */
  background: inherit; /* 继承卡片背景，颜色同步的直观视觉核心，inherit 表示使用父元素（也就是pc-card-wrapper）的背景 */
  background-position: inherit;
  border-radius: inherit;
  transition: all 0.5s ease; /* 平滑过渡动画，流畅效果的直观视觉核心 */
  filter: contrast(2) saturate(2) blur(36px); /* 高对比度+高饱和度+模糊，光晕效果的直观视觉核心 */
  transform: scale(0.8) translate3d(0, 0, 0.1px); /* 缩小一点，柔和效果的直观视觉核心 */
  background-size: 100% 100%;
  background-image: var(--behind-gradient); /* 使用behind-gradient变量，颜色控制的直观视觉核心 */
}

/* 
.pc-card-wrapper:hover,
.pc-card-wrapper.active {
  --card-opacity: 1; /* hover时激活所有光效，背景渐变显示的直观视觉核心 
}
*/
/* 新版：始终激活光效（无hover），适合3D wiggle自动触发场景 */
.pc-card-wrapper {
  --card-opacity: 1; /* 始终激活所有光效，卡片高亮，适合自动3D动画 */
}
/* 
  说明：
  - .pc-card-wrapper 默认--card-opacity为0，卡片没有高亮光效
  - 鼠标悬停（hover）或加上.active类时，--card-opacity变为1，卡片高亮
  - 这样可以实现只有hover时才有动态光效
*/

/* ========== 新版：始终激活光效（无hover） ========== */
/* 下面是新版写法，始终激活光效，不需要hover */
/* .pc-card-wrapper {
  --card-opacity: 1; 
} */
/* 
  说明：
  - 新版直接让--card-opacity为1，卡片始终有高亮光效
  - 适合3D wiggle自动触发的场景
*/

/* 直观视觉效果：鼠标悬停时增强光晕效果 - 已注释，改为始终激活 */
/* .pc-card-wrapper:hover::before,
.pc-card-wrapper.active::before {
  filter: contrast(1) saturate(2) blur(40px) opacity(1); /* hover时增强光晕效果，交互反馈的直观视觉核心 
  transform: scale(0.9) translate3d(0, 0, 0.1px); /* 稍微放大光晕，动态效果的直观视觉核心 
} */

/* 直观视觉效果：始终增强光晕效果 - 新版本 */
.pc-card-wrapper::before {
  filter: contrast(1) saturate(2) blur(40px) opacity(1); /* 始终增强光晕效果，交互反馈的直观视觉核心 */
  transform: scale(0.9) translate3d(0, 0, 0.1px); /* 稍微放大光晕，动态效果的直观视觉核心 */
}

/* ========== 卡片主体层 ========== */
/* 此类所有属性全负责：卡片主体层 */
/* 直观视觉效果：卡片的基础结构和多层背景效果 */
.pc-card {
  height: 100%; /* 视口高度的80%，尺寸控制的直观视觉核心 */
  max-height: 540px; /* 最大高度限制，尺寸控制的直观视觉核心 */
  display: grid;
  aspect-ratio: 0.718; /* 卡片宽高比，黄金比例的直观视觉核心 */
  border-radius: var(--card-radius); /* 卡片圆角，由css变量定义 */
  position: relative;
  background-blend-mode: color-dodge, normal, normal, normal; /* 此处混合的分别是下方background-image定义的4个背景渐变 */
  animation: glow-bg 12s linear infinite; /* 背景光效动画，动态效果的直观视觉核心 */
  
  box-shadow: rgba(0, 0, 0, 0.8) calc((var(--pointer-from-left) * 10px) - 3px)
    calc((var(--pointer-from-top) * 20px) - 6px) 20px -5px; /* 跟随鼠标的阴影，立体感的直观视觉核心 */
  
  transition: transform 1s ease; /* 3D变换的平滑过渡，流畅效果的直观视觉核心 */
  transform: translate3d(0, 0, 0.1px) rotateX(0deg) rotateY(0deg); /* 初始3D位置，立体感的直观视觉核心 */
  background-size: 100% 100%;
  background-position:
    0 0,
    0 0,
    50% 50%,
    0 0;
  
  /* ========== 卡片主体层的4个背景渐变 ========== */
  background-image:
    /* ========== 第1个：鼠标跟踪径向渐变 ========== */
    /* 直观视觉效果：跟随鼠标的紫色光效，hover时激活，创造动态光照 */
    radial-gradient(
      farthest-side circle at var(--pointer-x) var(--pointer-y), /* 径向渐变：farthest-side=渐变延伸到容器最远边，circle=圆形渐变，at=渐变中心跟随鼠标位置 */
      hsla(266, 100%, 90%, var(--card-opacity)) 4%, /* 中心亮紫色，透明度由--card-opacity控制，hover时显示 */
      hsla(266, 50%, 80%, calc(var(--card-opacity) * 0.75)) 10%, /* 中圈紫色，透明度递减，渐变过渡的直观视觉核心 */
      hsla(266, 25%, 70%, calc(var(--card-opacity) * 0.5)) 50%, /* 外圈淡紫色，透明度继续递减，柔和边缘的直观视觉核心 */
      hsla(266, 0%, 60%, 0) 100% /* 边缘完全透明，无缝融合的直观视觉核心 */
    ),
    
    /* ========== 第2个：固定青蓝色光效 ========== */
    /* 直观视觉效果：卡片右上角的青蓝色光斑，提供冷色调对比 */
    radial-gradient(35% 52% at 55% 20%, #d6d010c4 0%, #0eda33cb 100%), /* 径向渐变：35% 52%=椭圆尺寸(宽35%高52%)，at 55% 20%=渐变中心在右上角，青蓝色渐变 */
    
    /* ========== 第3个：固定蓝色光效 ========== */
    /* 直观视觉效果：卡片中心的蓝色光效，增强整体亮度 */
    radial-gradient(100% 100% at 50% 50%, rgb(199, 154, 136) 1%, #b5e2e1a5 76%), /* 径向渐变：100% 100%=覆盖整个容器，at 50% 50%=渐变中心在卡片正中央，蓝色渐变 */
    
    /* ========== 第4个：彩虹色环效果 ========== */
    /* 直观视觉效果：卡片表面的彩虹色环，提供金属质感和色彩层次 */
    conic-gradient(from 124deg at 50% 50%, #c137ffff 0%, #07c6ffff 40%, #07c6ffff 60%, #c137ffff 100%); /* 锥形渐变：from 124deg=从124度角开始，at 50% 50%=渐变中心在卡片正中央，紫色到蓝色色环渐变 */
  overflow: hidden; /* 隐藏超出边界的内容 */
}

/* ========== Hover时的3D变换 - 已注释，改为始终激活 ========== */
/* 直观视觉效果：鼠标悬停时的3D旋转效果 */
/* .pc-card:hover,
.pc-card.active {
  transition: none; /* 第2层，hover时取消过渡，流畅效果的直观视觉核心 
  transform: translate3d(0, 0, 0.1px) rotateX(var(--rotate-y)) rotateY(var(--rotate-x)); /* 第2层，使用鼠标跟踪的旋转角度，3D变换的直观视觉核心 
} */

/* ========== 始终激活的3D变换 - 新版本 ========== */
/* 直观视觉效果：始终激活的3D旋转效果 */
.pc-card {
  transition: none; /* 第2层，取消过渡，流畅效果的直观视觉核心 */
  transform: translate3d(0, 0, 0.1px) rotateX(var(--rotate-y)) rotateY(var(--rotate-x)); /* 第2层，使用鼠标跟踪的旋转角度，3D变换的直观视觉核心 */
}

/* ========== 卡片内所有元素的通用样式 ========== */
.pc-card * {
  display: grid; /* 所有子元素都使用grid布局 */
  grid-area: 1/-1; /* 占据整个网格区域，实现层叠效果 */
  border-radius: var(--card-radius); /* 继承卡片圆角 */
  transform: translate3d(0, 0, 0.1px); /* 启用硬件加速 */
  pointer-events: none; /* 禁用鼠标事件，避免干扰卡片交互 */
}

/* ========== 内部背景层 ========== */
/* 此类所有属性全负责：内部背景层 */
/* 直观视觉效果：卡片内部的基础背景颜色 */
.pc-inside {
  inset: 1px; /* 比卡片小1px，边框效果的直观视觉核心 */
  position: absolute;
  background-image: var(--inner-gradient); /* 使用inner-gradient变量，与第5层pc-glare混合后影响最终表面颜色，调试时在tsx文件中改DEFAULT_INNER_GRADIENT */
  background-color: rgba(136, 208, 19, 0.768); /* 备用背景色，金黄色半透明，当--inner-gradient为none时显示，与第5层pc-glare混合后影响最终表面颜色，调试时改这个值 */
  transform: translate3d(0, 0, 0.01px); /* 稍微提升层级，层级控制的直观视觉核心 */
}

/* ========== 彩虹光效层 ========== */
/* 此类所有属性全负责：彩虹光效层 */
/* 直观视觉效果：卡片表面的彩虹条纹和金属质感 */
.pc-shine {
  mask-image: var(--icon); /* 使用icon作为遮罩，遮罩效果的直观视觉核心 */
  mask-mode: luminance; /* 亮度遮罩模式，显示控制的直观视觉核心 */
  mask-repeat: repeat;
  mask-size: 150%; /* 遮罩放大，重复效果的直观视觉核心 */
  mask-position: top calc(200% - (var(--background-y) * 5)) left calc(100% - var(--background-x)); /* 跟随鼠标的遮罩位置，动态效果的直观视觉核心 */
  transition: filter 0.6s ease; /* 滤镜过渡动画，流畅效果的直观视觉核心 */
  filter: brightness(0.66) contrast(1.33) saturate(0.33) opacity(0.5); /* 降低亮度+增强对比度+降低饱和度+半透明，质感控制的直观视觉核心 */
  animation: holo-bg 18s linear infinite; /* 全息背景动画，控制斜向金属光泽移动，18秒一圈，调试时改这个值 */
  mix-blend-mode: color-dodge; /* 颜色减淡混合模式，光效的直观视觉核心 */
}

/* ========== 彩虹光效的复杂背景 ========== */
.pc-shine,
.pc-shine::after {
  --space: 5%; /* 彩虹条纹间距，调试时改这个值控制条纹密度 */
  --angle: -45deg; /* 条纹角度，调试时改这个值控制斜向角度 */
  transform: translate3d(0, 0, 1px); /* 提升层级 */
  overflow: hidden;
  z-index: 3;
  background: transparent;
  background-size: cover; /* 背景大小，cover模式，填满整个区域 */
  background-position: center;
  
  /* ========== 三层背景渐变叠加 ========== */
  background-image:
    /* ========== 第1层：彩虹条纹 ========== */
    /* 直观视觉效果：水平彩虹色带，跟随鼠标Y轴移动，创造彩色金属质感 */
    repeating-linear-gradient(
      0deg, /* 水平方向，调试时改这个值控制条纹方向 */
      var(--sunpillar-clr-1) calc(var(--space) * 1), /* 红色条纹，调试时改--sunpillar-1变量控制红色 */
      var(--sunpillar-clr-2) calc(var(--space) * 2), /* 黄色条纹，调试时改--sunpillar-2变量控制黄色 */
      var(--sunpillar-clr-3) calc(var(--space) * 3), /* 绿色条纹，调试时改--sunpillar-3变量控制绿色 */
      var(--sunpillar-clr-4) calc(var(--space) * 4), /* 青色条纹，调试时改--sunpillar-4变量控制青色 */
      var(--sunpillar-clr-5) calc(var(--space) * 5), /* 蓝色条纹，调试时改--sunpillar-5变量控制蓝色 */
      var(--sunpillar-clr-6) calc(var(--space) * 6), /* 紫色条纹，调试时改--sunpillar-6变量控制紫色 */
      var(--sunpillar-clr-1) calc(var(--space) * 7)  /* 重复红色条纹，调试时改--sunpillar-1变量控制红色 */
    ),
    /* ========== 第2层：金属质感斜向动画效果条纹 ========== */
    /* 直观视觉效果：斜向金属光泽条纹，自动播放动画，创造卡片整个表面的金属反光效果 */
    repeating-linear-gradient(
      var(--angle), /* 斜向角度，--angle变量控制，在tsx文件中改这个值 */
      #0e152e 0%, /* 起始颜色，百分号表示占整个表面积的百分比 */
      hsl(180, 10%, 60%) 3.8%, /* 0% - 3.8% 区域颜色，两个颜色之间自动线性渐变 */
      hsl(180, 29%, 66%) 4.5%, /* 同上 */
      hsl(180, 10%, 60%) 5.2%, /* 同上 */
      #0e152e 10%, /* 同上 */
      #0e152e 12%  /* 整个颜色过渡占表面积的12%，剩余区域动画滚动重复 */
    ),
    /* ========== 第3层：径向阴影 ========== */
    /* 直观视觉效果：跟随鼠标的径向阴影，增强立体感和深度 */
    radial-gradient(
      farthest-corner circle at var(--pointer-x) var(--pointer-y), /* 径向渐变：farthest-corner=渐变延伸到最远角，circle=圆形渐变，at=渐变中心跟随鼠标位置 */
      hsla(0, 0%, 0%, 0.1) 12%, /* 中心轻微阴影，调试时改这个值控制中心阴影透明度 */
      hsla(0, 0%, 0%, 0.15) 20%, /* 中等阴影，调试时改这个值控制中等阴影透明度 */
      hsla(0, 0%, 0%, 0.25) 120% /* 边缘深阴影，调试时改这个值控制边缘阴影透明度 */
    );
    
  /* ========== 背景位置和混合模式 ========== */
  background-position:
    0 var(--background-y), /* 彩虹条纹跟随鼠标Y轴 */
    var(--background-x) var(--background-y), /* 金属条纹跟随鼠标位置 */
    center; /* 阴影居中 */
  background-blend-mode: color, hard-light; /* 颜色混合和强光混合 */
  background-size:
    500% 500%, /* 彩虹条纹放大，调试时改这个值控制彩虹条纹大小 */
    300% 300%, /* 金属条纹放大，调试时改这个值控制金属条纹大小 */
    200% 200%; /* 阴影放大，调试时改这个值控制阴影大小 */
  background-repeat: repeat;
}

/* ========== 彩虹光效的伪元素 ========== */
.pc-shine::before,
.pc-shine::after {
  content: '';
  background-position: center;
  background-size: cover;
  grid-area: 1/1; /* 占据整个网格区域 */
  opacity: 1; /* 默认显示 */
}

/* ========== Hover时的彩虹光效变化 - 已注释，改为始终激活 ========== */
/* .pc-card:hover .pc-shine,
.pc-card.active .pc-shine {
  filter: brightness(0.85) contrast(1.5) saturate(0.5); /* hover时增强对比度和饱和度 
  animation: none; /* 停止动画，让效果更稳定 
}*/

/* .pc-card:hover .pc-shine::before,
.pc-card.active .pc-shine::before,
.pc-card:hover .pc-shine::after,
.pc-card.active .pc-shine::after {
  opacity: 0.5; 
} */

/* ========== 始终激活的彩虹光效变化 - 新版本 ========== */
.pc-card .pc-shine {
  filter: brightness(0.85) contrast(1.5) saturate(0.5); /* 始终增强对比度和饱和度 */
  animation: none; /* 停止动画，让效果更稳定 */
}

.pc-card .pc-shine::before,
.pc-card .pc-shine::after {
  opacity: 0.5; /* 始终降低伪元素透明度，让效果更柔和 */
}

/* ========== 鼠标悬停时的金属光泽效果 ========== */
.pc-shine::before {
  /* ========== 45度角彩虹渐变 - 金属光泽 ========== */
  background-image:
    linear-gradient(
      45deg,
      var(--sunpillar-4), /* 青色，调试时改--sunpillar-4变量 */
      var(--sunpillar-5), /* 蓝色，调试时改--sunpillar-5变量 */
      var(--sunpillar-6), /* 紫色，调试时改--sunpillar-6变量 */
      var(--sunpillar-1), /* 红色，调试时改--sunpillar-1变量 */
      var(--sunpillar-2), /* 黄色，调试时改--sunpillar-2变量 */
      var(--sunpillar-3)  /* 绿色，调试时改--sunpillar-3变量 */
    ),
    /* ========== 跟随鼠标的径向光效 ========== */
    radial-gradient(circle at var(--pointer-x) var(--pointer-y), hsl(0, 0%, 70%) 0%, hsla(0, 0%, 30%, 0.2) 90%),
    /* ========== 噪点纹理 ========== */
    var(--grain);
    
  background-size:
    250% 250%, /* 彩虹渐变放大 */
    100% 100%, /* 径向光效正常大小 */
    220px 220px; /* 噪点纹理固定大小 */
    
  background-position:
    var(--pointer-x) var(--pointer-y), /* 彩虹渐变跟随鼠标 */
    center, /* 径向光效居中 */
    calc(var(--pointer-x) * 0.01) calc(var(--pointer-y) * 0.01); /* 噪点纹理微调跟随鼠标 */
    
  background-blend-mode: color-dodge; /* 颜色减淡混合 */
  
  /* ========== 动态滤镜效果 ========== */
  filter: brightness(calc(2 - var(--pointer-from-center))) contrast(calc(var(--pointer-from-center) + 2))
    saturate(calc(0.5 + var(--pointer-from-center))); /* 根据鼠标距离动态调整亮度、对比度、饱和度 */
  mix-blend-mode: luminosity; /* 亮度混合模式 */
}

/* ========== 彩虹光效的第二个伪元素 ========== */
.pc-shine::after {
  /* ========== 背景位置跟随鼠标 ========== */
  background-position:
    0 var(--background-y), /* 彩虹条纹跟随鼠标Y轴 */
    calc(var(--background-x) * 0.4) calc(var(--background-y) * 0.5), /* 金属条纹跟随鼠标位置 */
    center; /* 阴影居中 */
    
  /* ========== 背景尺寸设置 ========== */
  background-size:
    200% 300%, /* 彩虹条纹放大 */
    700% 700%, /* 金属条纹大幅放大 */
    100% 100%; /* 阴影正常大小 */
    
  /* ========== 混合模式和滤镜 ========== */
  mix-blend-mode: difference; /* 差值混合，创造特殊光效 */
  filter: brightness(0.9) contrast(1.5); /* 调整亮度和对比度 */
}

/* ========== 表面光照效果层 ========== */
/* 此类所有属性全负责：表面光照效果层 */
/* 直观视觉效果：卡片表面的最终颜色和光照效果 */
.pc-glare {
  transform: translate3d(0, 0, 1.1px); /* 最高层级，层级控制的直观视觉核心 */
  overflow: hidden;
  
  background-image: radial-gradient(
    farthest-corner circle at var(--pointer-x) var(--pointer-y), /* 跟随鼠标位置，动态效果的直观视觉核心 */
    hsl(48, 100%, 90%) 12%, /* 卡片中心12%区域的颜色 */
    hsla(45, 90%, 80%) 90%  /* 卡片中心12%之外的颜色 */
  );
  
  mix-blend-mode: color; /* 差值混合，与内部背景层配合起效，最终颜色的直观视觉核心 */
  filter: brightness(0.7) contrast(5); /* 调整亮度和对比度，质感控制的直观视觉核心 */
  z-index: 4; /* 最高层级，覆盖所有其他层，层级控制的直观视觉核心 */
}

/* ========== 头像内容层 ========== */
/* 此类所有属性全负责：头像内容层 */
/* 直观视觉效果：头像图片和遮罩效果 */
.pc-avatar-content {
  mix-blend-mode: overlay; /* 叠加混合模式，融合效果的直观视觉核心 */
  overflow: hidden;
  position: relative;
}

.pc-avatar-content .avatar {
  width: 100%; /* 占满容器宽度，尺寸控制的直观视觉核心 */
  position: absolute;
  left: 50%; /* 水平居中，定位控制的直观视觉核心 */
  transform: translateX(-50%) scale(1); /* 水平居中并保持原始大小，定位控制的直观视觉核心 */
  bottom: 2px; /* 贴底边，留2px空隙，定位控制的直观视觉核心 */
  opacity: calc(1.75 - var(--pointer-from-center)); /* 根据鼠标距离动态调整透明度，动态效果的直观视觉核心 */
}

.pc-avatar-content::before {
  content: '';
  position: absolute;
  inset: 0; /* 覆盖整个头像区域 */
  z-index: 1; /* 在头像之上 */
  backdrop-filter: blur(10px); /* 背景模糊效果 */
  
  /* ========== 渐变遮罩 - 让头像边缘柔和 ========== */
  mask: linear-gradient(
    to bottom,
    rgba(255, 215, 0, 0.8) 0%, /* 顶部80%透明度 */
    rgba(255, 215, 0, 0.3) 60%, /* 中间30%透明度 */
    rgba(255, 215, 0, 0) 100% /* 底部完全透明 */
  );
  pointer-events: none; /* 不阻挡鼠标事件 */
}

/* ========== 用户信息卡片 ========== */
.pc-user-info {
  position: absolute;
  bottom: 20px; /* 距离底部20px */
  left: 20px; /* 距离左边20px */
  right: 20px; /* 距离右边20px */
  z-index: 2; /* 在头像之上 */
  display: flex;
  align-items: center;
  justify-content: space-between; /* 左右分布 */
  
  /* ========== 玻璃质感背景 ========== */
  background: rgba(255, 215, 0, 0.15); /* 金黄色半透明背景 */
  backdrop-filter: blur(30px); /* 背景模糊，创造玻璃效果 */
  border: 1px solid rgba(255, 215, 0, 0.3); /* 金黄色边框 */
  border-radius: 15px; /* 圆角 */
  padding: 12px 14px; /* 内边距 */
  pointer-events: auto; /* 允许鼠标交互 */
}

/* ========== 用户详情区域 ========== */
.pc-user-details {
  display: flex;
  align-items: center;
  gap: 12px; /* 元素间距 */
}

/* ========== 小头像 ========== */
.pc-mini-avatar {
  width: 48px; /* 固定宽度 */
  height: 48px; /* 固定高度 */
  border-radius: 50%; /* 圆形 */
  overflow: hidden; /* 隐藏超出部分 */
  border: 1px solid rgba(255, 255, 255, 0.1); /* 白色半透明边框 */
  flex-shrink: 0; /* 不缩小 */
}

.pc-mini-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* 保持比例填充 */
  border-radius: 50%; /* 圆形 */
}

/* ========== 用户文字信息 ========== */
.pc-user-text {
  display: flex;
  align-items: flex-start;
  flex-direction: column; /* 垂直排列 */
  gap: 6px; /* 文字间距 */
}

/* ========== 用户名 ========== */
.pc-handle {
  font-size: 14px;
  font-weight: 500;
  color: #ffd700; /* 金黄色 */
  line-height: 1;
}

/* ========== 在线状态 ========== */
.pc-status {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7); /* 白色半透明 */
  line-height: 1;
}

/* ========== 联系按钮 ========== */
.pc-contact-btn {
  border: 1px solid rgba(255, 215, 0, 0.6); /* 金黄色边框 */
  border-radius: 8px; /* 圆角 */
  padding: 8px 16px; /* 内边距 */
  font-size: 14px;
  font-weight: 600;
  color: #ffd700; /* 金黄色文字 */
  cursor: pointer; /* 手型光标 */
  transition: all 0.2s ease; /* 过渡动画 */
  backdrop-filter: blur(10px); /* 背景模糊 */
}

/* ========== 联系按钮悬停效果 - 已注释，改为始终激活 ========== */
/* .pc-contact-btn:hover {
  border-color: #ffd700; 
  background: rgba(255, 215, 0, 0.1); 
  transform: translateY(-1px); 
  transition: all 0.2s ease; 
} */

/* ========== 联系按钮始终激活效果 - 新版本 ========== */
.pc-contact-btn {
  border-color: #ffd700; /* 始终边框变亮 */
  background: rgba(255, 215, 0, 0.1); /* 始终背景变亮 */
  transform: translateY(-1px); /* 始终向上移动1px */
  transition: all 0.2s ease; /* 过渡动画 */
}

/* ========== 文字内容层 ========== */
/* 此类所有属性全负责：文字内容层 */
/* 直观视觉效果：彩虹渐变文字和微动效果 */
.pc-content {
  max-height: 100%;
  overflow: hidden;
  text-align: center; /* 文字居中，布局控制的直观视觉核心 */
  position: relative;
  
  transform: translate3d(
    calc(var(--pointer-from-left) * -6px + 3px), /* 水平微动，跟随鼠标X轴，动态效果的直观视觉核心 */
    calc(var(--pointer-from-top) * -6px + 3px), /* 垂直微动，跟随鼠标Y轴，动态效果的直观视觉核心 */
    0.1px
  ) !important;
  z-index: 5; /* 最高层级，确保文字在最上层，层级控制的直观视觉核心 */
  mix-blend-mode: luminosity; /* 亮度混合模式，融合效果的直观视觉核心 */
}

.pc-details {
  width: 100%;
  position: absolute;
  top: 0em; /* 贴顶部 */
  display: flex;
  flex-direction: column; /* 垂直排列 */
}

/* ========== 名字文字样式 ========== */
.pc-details h3 {
  font-weight: 500;
  margin: 0;
  font-size: 3em;
  margin: 0;
  background-image: linear-gradient(to bottom, var(--sunpillar-1), var(--sunpillar-3), var(--sunpillar-5)); /* 红-绿-蓝渐变，彩虹效果的直观视觉核心 */
  background-size: 1em 1.5em; /* 渐变尺寸，渐变效果的直观视觉核心 */
  -webkit-text-fill-color: transparent; /* 文字透明，显示背景渐变，渐变效果的直观视觉核心 */
  background-clip: text; /* 标准属性，渐变效果的直观视觉核心 */
  -webkit-background-clip: text; /* WebKit属性，渐变效果的直观视觉核心 */
}

/* ========== 数值文字样式 ========== */
.pc-details p {
  font-weight: 600;
  position: relative;
  top: -12px; /* 向上偏移，靠近名字，布局控制的直观视觉核心 */
  white-space: nowrap; /* 不换行，布局控制的直观视觉核心 */
  font-size: 16px;
  margin: 0 auto;
  width: min-content; /* 最小宽度，布局控制的直观视觉核心 */
  background-image: linear-gradient(to bottom, var(--sunpillar-2), var(--sunpillar-4), var(--sunpillar-6)); /* 黄-青-紫渐变，彩虹效果的直观视觉核心 */
  background-size: 1em 1.5em; /* 渐变尺寸，渐变效果的直观视觉核心 */
  -webkit-text-fill-color: transparent; /* 文字透明，显示背景渐变，渐变效果的直观视觉核心 */
  background-clip: text; /* 标准属性，渐变效果的直观视觉核心 */
  -webkit-background-clip: text; /* WebKit属性，渐变效果的直观视觉核心 */
}

/* ========== 背景光效动画 ========== */
@keyframes glow-bg {
  0% {
    --bgrotate: 0deg; /* 背景旋转角度从0度开始 */
  }

  100% {
    --bgrotate: 360deg; /* 背景旋转角度到360度，完成一圈 */
  }
}

/* ========== 全息背景动画 ========== */
/* 控制斜向金属光泽移动的动画，调试时改这个动画控制移动效果 */
@keyframes holo-bg {
  0% {
    background-position:
      0 var(--background-y), /* 彩虹条纹初始位置 */
      0 0, /* 金属条纹初始位置，调试时改这个值控制起始位置 */
      center; /* 阴影居中 */
  }

  100% {
    background-position:
      0 var(--background-y), /* 彩虹条纹保持Y轴跟随 */
      90% 90%, /* 金属条纹移动到90%位置，调试时改这个值控制结束位置 */
      center; /* 阴影保持居中 */
  }
}
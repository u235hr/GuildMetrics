/* /components/GoldProfileCard.css */
/* 100%复制profilecard的css */

/* ========================================
   CSS 变量定义区域
   定义整个卡片组件使用的全局变量，包括颜色、位置、动画参数等
   ======================================== */
:root {
    /* 鼠标指针位置变量 - 用于实现鼠标跟踪效果 */
    --pointer-x: 50%; /* 鼠标相对于卡片的水平位置百分比 */
    --pointer-y: 50%; /* 鼠标相对于卡片的垂直位置百分比 */
    
    /* 鼠标距离中心的计算值 - 用于控制各种效果的强度 */
    --pointer-from-center: 0; /* 鼠标距离卡片中心的距离 (0-1) */
    --pointer-from-top: 0.5; /* 鼠标距离顶部的相对位置 (0-1) */
    --pointer-from-left: 0.5; /* 鼠标距离左侧的相对位置 (0-1) */
    
    /* 卡片状态变量 */
    --card-opacity: 0; /* 卡片背景效果的透明度 (0-1) */
    --rotate-x: 0deg; /* 卡片绕X轴旋转角度 */
    --rotate-y: 0deg; /* 卡片绕Y轴旋转角度 */
    
    /* 背景效果位置变量 */
    --background-x: 50%; /* 背景渐变效果的水平位置 */
    --background-y: 50%; /* 背景渐变效果的垂直位置 */
    
    /* 装饰元素变量 */
    --grain: none; /* 纹理图片URL */
    --icon: none; /* 图标图片URL */
    --behind-gradient: none; /* 卡片背后的渐变效果 */
    --inner-gradient: none; /* 卡片内部的渐变效果 */
    
    /* 销冠金系列 – 0.7~0.9 饱和度，不刺眼 */
    --sunpillar-1: hsl(45, 80%, 98%);   /* 最亮金 */
    --sunpillar-2: hsl(42, 75%, 85%);
    --sunpillar-3: hsl(40, 70%, 65%);   /* 主金 */
    --sunpillar-4: hsl(38, 70%, 50%);
    --sunpillar-5: hsl(35, 80%, 40%);
    --sunpillar-6: hsla(25, 90%, 30%, 0.895);   /* 暗金 */
    
    /* 直接覆盖彩虹别名，其他代码零改动 */
    --sunpillar-clr-1: var(--sunpillar-1);
    --sunpillar-clr-2: var(--sunpillar-2);
    --sunpillar-clr-3: var(--sunpillar-3);
    --sunpillar-clr-4: var(--sunpillar-4);
    --sunpillar-clr-5: var(--sunpillar-5);
    --sunpillar-clr-6: var(--sunpillar-6);
    
    /* 卡片圆角半径 */
    --card-radius: 30px;
  }
  
/* ========================================
   卡片外层容器 (.pc-card-wrapper)
   负责3D透视效果和整体布局定位
   ======================================== */
  .pc-card-wrapper {
    perspective: 500px; /* 设置3D透视距离，数值越小透视效果越强 */
    transform: translate3d(0, 0, 0.1px); /* 启用硬件加速，提升性能 */
    position: relative; /* 相对定位，为子元素提供定位参考 */
    touch-action: none; /* 禁用触摸操作，避免与鼠标事件冲突 */
  }
  
  /* 卡片背后的光晕效果 - 使用伪元素创建 */
  .pc-card-wrapper::before {
    /* display: none; */
    content: '';
    position: absolute;
    inset: -10px;
    background: inherit;
    background-position: inherit;
    border-radius: inherit;
    transition: all 0.5s ease;
    filter: contrast(2) saturate(2) blur(36px);
    transform: scale(0.8) translate3d(0, 0, 0.1px);
    background-size: 100% 100%;
    background-image: var(--behind-gradient); 
  }
  
  /* 鼠标悬停和激活状态 - 显示卡片背景效果 */
  .pc-card-wrapper:hover,
  .pc-card-wrapper.active {
    --card-opacity: 1; /* 将背景透明度设为1，显示背景效果 */
  }
  
  /* 鼠标悬停和激活状态下的光晕效果 */
  .pc-card-wrapper:hover::before,
  .pc-card-wrapper.active::before {
    filter: contrast(1) saturate(2) blur(40px) opacity(1); /* 调整滤镜效果，增加模糊度 */
    transform: scale(0.9) translate3d(0, 0, 0.1px); /* 放大到90%，增强光晕效果 */
  }
  
/* ========================================
   主卡片容器 (.pc-card)
   卡片的视觉主体，包含所有背景效果和3D变换
   ======================================== */
  .pc-card {
    height: 100%; /* 占满父容器高度 */
    display: grid; /* 使用网格布局 */
    aspect-ratio: 0.718; /* 设置宽高比为0.718，接近黄金比例 */
    border-radius: var(--card-radius); /* 使用CSS变量定义的圆角 */
    position: relative; /* 相对定位，为子元素提供定位参考 */
    background-blend-mode: color-dodge, normal, normal, normal; /* 背景混合模式，创建发光效果 */
    animation: glow-bg 12s linear infinite; /* 背景发光动画，12秒循环 */
    box-shadow: rgba(0, 0, 0, 0.8) calc((var(--pointer-from-left) * 10px) - 3px) /* 动态阴影，跟随鼠标位置 */
      calc((var(--pointer-from-top) * 20px) - 6px) 20px -5px; /* 动态阴影，跟随鼠标位置 */
    transition: transform 1s ease; /* 变换效果有1秒的缓动过渡 */
    transform: translate3d(0, 0, 0.1px) rotateX(0deg) rotateY(0deg); /* 初始3D变换状态 */
    background-size: 100% 100%; /* 背景图片铺满整个区域 */
    background-position:
      0 0, /* 第一个背景的位置 */
      0 0, /* 第二个背景的位置 */
      50% 50%, /* 第三个背景的位置 */
      0 0; /* 第四个背景的位置 */
    background-image: /* 定义多个背景层，从上到下叠加，共同构成复杂的金色卡面 */
      radial-gradient(
        farthest-side circle at var(--pointer-x) var(--pointer-y),
        hsla(42, 90%, 100%, var(--card-opacity)) 4%, /* 最亮金 */
        hsla(40, 80%, 80%, calc(var(--card-opacity) * 0.75)) 10%,
        hsla(38, 60%, 70%, calc(var(--card-opacity) * 0.5)) 50%,
        hsla(35, 50%, 60%, 0) 100% 
      ),
      /* 2. 3. 保留青/蓝做冷色对比，但透明度降到 0.4 以下，不让它抢戏 */
      radial-gradient(35% 52% at 55% 20%, #00ffaa66 0%, #073aff00 100%),
      radial-gradient(100% 100% at 50% 50%, #00c1ff66 1%, #073aff00 76%),
      /* 4. 金→橙金 锥形渐变 */
      conic-gradient(from 124deg at 50% 50%,
        var(--sunpillar-3) 0%,
        var(--sunpillar-4) 40%,
        var(--sunpillar-5) 60%,
        var(--sunpillar-3) 100%);
  }
  
  /* 鼠标悬停和激活状态 - 应用3D倾斜效果 */
  .pc-card:hover,
  .pc-card.active {
    transition: none; /* 禁用过渡效果，让倾斜更流畅 */
    transform: translate3d(0, 0, 0.1px) rotateX(var(--rotate-y)) rotateY(var(--rotate-x)); /* 根据鼠标位置进行3D旋转 */
  }
  
  /* 卡片内所有子元素的通用样式 */
  .pc-card * {
    display: grid; /* 所有子元素都使用网格布局 */
    grid-area: 1/-1; /* 占据整个网格区域 */
    border-radius: var(--card-radius); /* 继承卡片的圆角 */
    transform: translate3d(0, 0, 0.1px); /* 启用硬件加速 */
    pointer-events: none; /* 禁用鼠标事件，避免干扰父元素的交互 */
  }
  
/* ========================================
   卡片内部容器 (.pc-inside)
   创建卡片的内边框和内部背景效果
   ======================================== */
  .pc-inside {
    inset: 1px; /* 距离父容器边缘1px，创建内边框效果 */
    position: absolute; /* 绝对定位，覆盖整个父容器 */
    background-color: hsla(45, 90%, 80%); /* 控制的视觉范围：卡片第一眼的表面颜色 */
    box-shadow: 
      inset 0 0 0 1px hsl(48, 100%, 100%),   /* 金卡边框颜色*/
      inset 0 0 20px 0 hsl(48, 100%, 92%); /* 金卡边框靠近边缘的颜色*/
    transform: translate3d(0, 0, 0.01px); /* 启用硬件加速，层级略高于父容器 */
  }
  
  /*.pc-shine 负责卡片表面金属光泽移动动画效果*/
  .pc-shine {
    mask-image: var(--icon);
    mask-mode: luminance;
    mask-repeat: repeat;
    mask-size: 150%;
    mask-position: top calc(200% - (var(--background-y) * 5)) left calc(100% - var(--background-x));
    transition: filter 0.6s ease;
    filter: brightness(0.7) contrast(1) saturate(1) opacity(0.6); /* saturate 饱和度，最高值为1 */
    animation: holo-bg 18s linear infinite;
    mix-blend-mode: color-dodge;
  }
  
  /* 彩虹光效层及其伪元素的共同样式 */
  .pc-shine,
  .pc-shine::after {
    --space: 5%; /* 彩虹条纹间距 */
    --angle: -45deg; /* 条纹角度 */
    transform: translate3d(0, 0, 1px); /* 启用硬件加速，层级高于内部容器 */
    overflow: hidden; /* 隐藏超出边界的内容 */
    z-index: 3; /* 设置层级为3 */
    background: transparent; /* 透明背景 */
    background-size: cover; /* 背景图片覆盖整个区域 */
    background-position: center; /* 背景图片居中 */
    background-image:
      /* 垂直彩虹条纹渐变 - 创建彩虹光效 */
      repeating-linear-gradient(
        0deg, /* 垂直方向 */
        var(--sunpillar-clr-1) calc(var(--space) * 1), /* 红色条纹 */
        var(--sunpillar-clr-2) calc(var(--space) * 2), /* 黄色条纹 */
        var(--sunpillar-clr-3) calc(var(--space) * 3), /* 绿色条纹 */
        var(--sunpillar-clr-4) calc(var(--space) * 4), /* 青色条纹 */
        var(--sunpillar-clr-5) calc(var(--space) * 5), /* 蓝色条纹 */
        var(--sunpillar-clr-6) calc(var(--space) * 6), /* 紫色条纹 */
        var(--sunpillar-clr-1) calc(var(--space) * 7) /* 回到红色，形成循环 */
      ),
      /* 对角线条纹渐变 - 创建全息纹理 */
      repeating-linear-gradient(
        var(--angle), /* 使用-45度角 */
        #0e152e 0%, /* 深蓝色 */
        hsl(180, 10%, 60%) 3.8%, /* 浅青色 */
        hsl(180, 29%, 66%) 4.5%, /* 更亮的青色 */
        hsl(180, 10%, 60%) 5.2%, /* 回到浅青色 */
        #0e152e 10%, /* 回到深蓝色 */
        #0e152e 12% /* 深蓝色结束 */
      ),
      /* 径向渐变 - 创建中心到边缘的阴影效果 */
      radial-gradient(
        farthest-corner circle at var(--pointer-x) var(--pointer-y), /* 以鼠标位置为中心 */
        hsla(0, 0%, 0%, 0.1) 12%, /* 中心区域轻微阴影 */
        hsla(0, 0%, 0%, 0.15) 20%, /* 中间区域阴影 */
        hsla(0, 0%, 0%, 0.25) 120% /* 边缘区域较深阴影 */
      );
    background-position:
      0 var(--background-y), /* 第一个背景的位置 */
      var(--background-x) var(--background-y), /* 第二个背景的位置 */
      center; /* 第三个背景的位置 */
    background-blend-mode: color, hard-light; /* 颜色和强光混合模式 */
    background-size:
      500% 500%, /* 第一个背景的大小 */
      300% 300%, /* 第二个背景的大小 */
      200% 200%; /* 第三个背景的大小 */
    background-repeat: repeat; /* 所有背景都重复 */
  }
  
  /* 彩虹光效层的伪元素 - 默认隐藏 */
  .pc-shine::before,
  .pc-shine::after {
    content: ''; /* 伪元素必须有content属性才能显示 */
    background-position: center; /* 背景图片居中 */
    background-size: cover; /* 背景图片覆盖整个区域 */
    grid-area: 1/1; /* 占据整个网格区域 */
    opacity: 0; /* 默认透明，鼠标悬停时显示 */
  }
  
  /* 鼠标悬停和激活状态 - 调整彩虹光效 */
  .pc-card:hover .pc-shine,
  .pc-card.active .pc-shine {
    filter: brightness(0.85) contrast(1.5) saturate(0.5); /* 调整亮度、对比度和饱和度 */
    animation: none; /* 停止动画，让效果更稳定 */
  }
  
  /* 鼠标悬停和激活状态 - 显示伪元素 */
  .pc-card:hover .pc-shine::before,
  .pc-card.active .pc-shine::before,
  .pc-card:hover .pc-shine::after,
  .pc-card.active .pc-shine::after {
    opacity: 0.1; /* 显示伪元素，增强光效 */
  }
  
  /* 彩虹光效层的前置伪元素 - 创建动态彩虹效果 */
  .pc-shine::before {
    background-image:
      /* 45度角的彩虹渐变 - 创建动态彩虹光效 */
      linear-gradient(
        45deg, /* 45度角 */
        var(--sunpillar-4), /* 青色 */
        var(--sunpillar-5), /* 蓝色 */
        var(--sunpillar-6), /* 紫色 */
        var(--sunpillar-1), /* 红色 */
        var(--sunpillar-2), /* 黄色 */
        var(--sunpillar-3) /* 绿色 */
      ),
      /* 径向渐变 - 创建中心高亮效果 */
      radial-gradient(circle at var(--pointer-x) var(--pointer-y), hsl(0, 0%, 70%) 0%, hsla(0, 0%, 30%, 0.2) 90%),
      /* 纹理图片 */
      var(--grain);
    background-size:
      250% 250%, /* 第一个背景的大小 */
      100% 100%, /* 第二个背景的大小 */
      220px 220px; /* 第三个背景的大小 */
    background-position:
      var(--pointer-x) var(--pointer-y), /* 第一个背景跟随鼠标 */
      center, /* 第二个背景居中 */
      calc(var(--pointer-x) * 0.01) calc(var(--pointer-y) * 0.01); /* 第三个背景微调跟随鼠标 */
    background-blend-mode: color-dodge; /* 颜色减淡混合模式 */
    filter: brightness(calc(2 - var(--pointer-from-center))) contrast(calc(var(--pointer-from-center) + 2))
      saturate(calc(0.5 + var(--pointer-from-center))); /* 根据鼠标距离中心的远近调整滤镜效果 */
    mix-blend-mode: luminosity; /* 亮度混合模式 */
  }
  
  /* 彩虹光效层的后置伪元素 - 创建额外的光效层 */
  .pc-shine::after {
    background-position:
      0 var(--background-y), /* 第一个背景的位置 */
      calc(var(--background-x) * 0.4) calc(var(--background-y) * 0.5), /* 第二个背景的位置，跟随鼠标但偏移 */
      center; /* 第三个背景的位置 */
    background-size:
      200% 300%, /* 第一个背景的大小 */
      700% 700%, /* 第二个背景的大小 */
      100% 100%; /* 第三个背景的大小 */
    mix-blend-mode: difference; /* 差值混合模式，创建对比效果 */
    filter: brightness(0.8) contrast(1.5); /* 调整亮度和对比度 */
  }
  
  /* 效果：反光效果层 (.pc-glare)，创建卡片表面的反光和光泽效果 */
  .pc-glare {
    transform: translate3d(0, 0, 1.1px); /* 启用硬件加速，层级最高 */
    overflow: hidden; /* 隐藏超出边界的内容 */
    background-image: radial-gradient( 
      farthest-corner circle at var(--pointer-x) var(--pointer-y), /* 以鼠标位置为中心的径向渐变 */
      hsla(45, 80%, 75%, 0.7) 12%, /* 中心区域浅紫色高亮 */
      hsla(38, 70%, 45%, 0.5) 90% /* 边缘区域深蓝色阴影 */
    );
    mix-blend-mode: overlay; /* 叠加混合模式，创建反光效果 */
    filter: brightness(0.3) contrast(1.2); /* brightness 亮度，最高值为1；contrast 对比度，最高值为1 */
    z-index: 4; /* 设置层级为4，确保在最上层 */
  }
  
/* ========================================
   头像内容区域 (.pc-avatar-content)
   包含头像图片和相关的视觉效果
   ======================================== */
  .pc-avatar-content {
    /* 混合模式说明：
    normal - 正常显示，不混合
    screen - 屏幕模式，变亮，白色部分更亮
    overlay - 叠加模式，增强对比度，让颜色更鲜艳
    difference - 差值模式，创建反色效果
    multiply - 正片叠底，变暗，黑色部分更暗
    color-dodge - 颜色减淡，变亮
    hard-light - 强光，增强对比度 */
    mix-blend-mode: overlay; 
    overflow: hidden;
    /* 添加一个半透明的白色遮罩层，隔离背景影响 */
    position: relative;
  }
  
  /* 头像图片样式（适配竖版照片） */
  .pc-avatar-content .avatar {
    width: 100%;
    position: absolute;
    left: 50%;
    transform: translateX(-50%) scale(1);
    bottom: 40px;
    opacity: calc(1.75 - var(--pointer-from-center));
    /* 用 opacity 渐变控制透明度 */
    mask: linear-gradient(
      to bottom,
      rgba(255,255,255,0) 3%,
      rgba(255,255,255,0.2) 5%,
      rgba(255,255,255,1) 10%,
      rgba(255,255,255,1) 90%,
      rgba(255,255,255,0.2) 95%,
      rgba(255,255,255,0) 98%,
      rgba(255,255,255,0) 100%  
    );
}
  
  /* 头像区域的遮罩效果 - 创建渐变遮罩 */
  .pc-avatar-content::before {
    content: '';
    position: absolute;
    inset: 0;
    z-index: 1;
    backdrop-filter: blur(10px); /* 背景模糊效果 */
    /* --- 修改这里 --- */
    mask: linear-gradient(
      to bottom,
      rgba(237, 236, 234, 0.2) 0%, /* 不透明度从 0.8 降到 0.2 */
      rgba(255, 215, 0, 0.1) 60%, /* 不透明度从 0.3 降到 0.1 */
      rgba(255, 215, 0, 0) 100%
    );
    pointer-events: none;
  }
  
/* ========================================
   用户信息区域 (.pc-user-info)
   显示用户头像、用户名、状态和联系按钮
   ======================================== */
  .pc-user-info {
    position: absolute; /* 绝对定位 */
    bottom: 20px; /* 距离底部20px */
    left: 20px; /* 距离左侧20px */
    right: 20px; /* 距离右侧20px */
    z-index: 2; /* 设置层级为2 */
    display: flex; /* 弹性布局 */
    align-items: center; /* 垂直居中对齐 */
    justify-content: space-between; /* 两端对齐 */
    background: hsla(42, 80%, 50%, 0.12); /* 金色半透明渐变背景 */
    backdrop-filter: blur(30px); /* 背景模糊效果 */
    border: 1px solid hsla(42, 80%, 50%, 0.35); /* 金色半透明边框 */
    border-radius: 15px; /* 圆角15px */
    padding: 12px 14px; /* 内边距 */
    pointer-events: auto; /* 启用鼠标事件 */
  }
  
  /* 用户详细信息区域 - 包含头像和文本 */
  .pc-user-details {
    display: flex; /* 弹性布局 */
    align-items: center; /* 垂直居中对齐 */
    gap: 12px; /* 子元素间距12px */
  }
  
  /* 小头像容器 */
  .pc-mini-avatar {
    width: 48px; /* 宽度48px */
    height: 48px; /* 高度48px */
    border-radius: 50%; /* 圆形 */
    overflow: hidden; /* 隐藏超出边界的内容 */
    border: 1px solid rgba(255, 255, 255, 0.1); /* 半透明白色边框 */
    flex-shrink: 0; /* 不允许收缩 */
  }
  
  /* 小头像图片 */
  .pc-mini-avatar img {
    width: 100%; /* 占满父容器宽度 */
    height: 100%; /* 占满父容器高度 */
    object-fit: cover; /* 保持比例填充 */
    border-radius: 50%; /* 圆形 */
  }
  
  /* 用户文本区域 - 包含用户名和状态 */
  .pc-user-text {
    display: flex; /* 弹性布局 */
    align-items: flex-start; /* 顶部对齐 */
    flex-direction: column; /* 垂直排列 */
    gap: 6px; /* 子元素间距6px */
  }
  
  /* 用户名样式 */
  .pc-handle {
    font-size: 14px; /* 字体大小14px */
    font-weight: 500; /* 字体粗细500 */
    color: var(--gold-light);
    line-height: 1; /* 行高1 */
  }
  
  /* 用户状态样式 */
  .pc-status {
    font-size: 14px; /* 字体大小14px */
    color: hsl(42, 40%, 80%); /* 更透明的白色 */
    line-height: 1; /* 行高1 */
  }
  
  /* 联系按钮样式 */
  .pc-contact-btn {
    border: 1px solid rgba(255, 215, 0, 0.6); /* 金色边框高亮 */
    border-radius: 8px; /* 圆角8px */
    padding: 8px 16px; /* 内边距 */
    font-size: 14px; /* 字体大小14px */
    font-weight: 600; /* 字体粗细600 */
    color: #ffd700; /* 金色文字 */
    cursor: pointer; /* 鼠标指针样式 */
    transition: all 0.2s ease; /* 所有属性变化都有0.2秒的缓动过渡 */
    backdrop-filter: blur(10px); /* 背景模糊效果 */
  }

  /* 联系按钮悬停状态 */
  .pc-contact-btn:hover {
    border-color: #ffd700; /* 悬停时边框为纯金色 */
    background: rgba(255, 215, 0, 0.1); /* 金色半透明背景 */
    transform: translateY(-1px); /* 向上移动1px，创建浮起效果 */
    transition: all 0.2s ease; /* 所有属性变化都有0.2秒的缓动过渡 */
  }
  
/* ========================================
   主要内容区域 (.pc-content)
   包含用户姓名和职位的文本内容
   ======================================== */
  .pc-content {
    max-height: 100%; /* 最大高度100% */
    overflow: hidden; /* 隐藏超出边界的内容 */
    text-align: center; /* 文本居中对齐 */
    position: relative; /* 相对定位 */
    transform: translate3d(
      calc(var(--pointer-from-left) * -6px + 3px), /* 根据鼠标水平位置微调水平偏移 */
      calc(var(--pointer-from-top) * -6px + 3px), /* 根据鼠标垂直位置微调垂直偏移 */
      0.1px /* 启用硬件加速 */
    ) !important; /* 使用!important确保优先级 */
    z-index: 5; /* 设置层级为5，确保在最上层 */
    mix-blend-mode: luminosity; /* 亮度混合模式 */
  }
  
  /* 用户详细信息容器 */
  .pc-details {
    width: 100%; /* 占满父容器宽度 */
    position: absolute; /* 绝对定位 */
    top: 0em; /* 距离顶部3em */
    display: flex; /* 弹性布局 */
    flex-direction: column; /* 垂直排列 */
  }
  
  /* 用户姓名样式 */
  .pc-details h3 {
    font-weight: 500; /* 字体粗细600 */
    margin: 0; /* 重置外边距 */
    font-size: 3em; /* 响应式字体大小，最大3em */
    margin: 0; /* 重置外边距 */
    background-image: linear-gradient(to bottom, var(--sunpillar-1), var(--sunpillar-3), var(--sunpillar-5)); /* 金色系渐变 */
    background-size: 1em 1.5em; /* 背景大小 */
    -webkit-text-fill-color: transparent; /* 文字颜色透明 */
    background-clip: text; /* 背景裁剪到文字 */
    -webkit-background-clip: text; /* WebKit背景裁剪到文字 */
  }
  
  /* 用户职位样式 */
  .pc-details p {
    font-weight: 600; /* 字体粗细600 */
    position: relative; /* 相对定位 */
    top: -12px; /* 向上偏移12px */
    white-space: nowrap; /* 不换行 */
    font-size: 16px; /* 字体大小16px */
    margin: 0 auto; /* 水平居中 */
    width: min-content; /* 宽度适应内容 */
    background-image: linear-gradient(to bottom, var(--sunpillar-2), var(--sunpillar-4), var(--sunpillar-6)); /* 亮金到橙金渐变 */
    background-size: 1em 1.5em; /* 背景大小 */
    -webkit-text-fill-color: transparent; /* 文字颜色透明 */
    background-clip: text; /* 背景裁剪到文字 */
    -webkit-background-clip: text; /* WebKit背景裁剪到文字 */
  }
  
/* ========================================
   动画定义区域
   定义卡片的各种动画效果
   ======================================== */

  /* 背景发光动画 - 让背景渐变旋转 */
  @keyframes glow-bg {
    0% {
      --bgrotate: 0deg; /* 开始角度0度 */
    }
  
    100% {
      --bgrotate: 360deg; /* 结束角度360度，完成一圈旋转 */
    }
  }
  
  /* 全息背景动画 - 让彩虹条纹移动 */
  @keyframes holo-bg {
    0% {
      background-position:
        0 var(--background-y), /* 第一个背景的初始位置 */
        0 0, /* 第二个背景的初始位置 */
        center; /* 第三个背景的初始位置 */
    }
  
    100% {
      background-position:
        0 var(--background-y), /* 第一个背景保持垂直位置不变 */
        90% 90%, /* 第二个背景移动到右下角 */
        center; /* 第三个背景保持居中 */
    }
  }